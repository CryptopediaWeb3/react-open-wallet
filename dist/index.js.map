{"version":3,"file":"index.js","sources":["../src/context/index.ts","../src/tools/index.ts","../src/hooks/index.ts","../src/index.tsx"],"sourcesContent":["import { createContext } from 'react'\n\nexport interface WalletContextProps {\n  account: string\n  checkWallet: () => unknown\n  requestAccount: () => unknown\n}\n\nexport const WalletContext = createContext<WalletContextProps>({\n  account: '',\n  checkWallet: () => {},\n  requestAccount: () => {}\n})\n","import React from 'react'\n\n/**\n * Verify if you have MetaMask installed\n * @returns {boolean}\n */\nexport const checkWallet = (): boolean => {\n  if (!window.ethereum) {\n    console.error('Install MetaMask')\n  }\n\n  return window.ethereum !== undefined || window.ethereum !== null\n}\n\n/**\n * Get MetaMask accounts\n * @param {React.Dispatch<React.SetStateAction<string>>} setAccount\n * @returns {Promise<void>}\n */\nexport const requestAccount = async (\n  setAccount: React.Dispatch<React.SetStateAction<string>>\n): Promise<void> => {\n  if (window.ethereum) {\n    // @ts-ignore\n    const metaAccounts = await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    })\n    setAccount(metaAccounts[0])\n  }\n}\n","import { useEffect } from 'react'\nimport { checkWallet } from '../tools'\n\n/**\n * Hook for window eth events\n * @param {React.Dispatch<React.SetStateAction<string>>} setAccount\n * @returns {Promise<void>}\n */\nexport const useListener = (\n  setAccount: React.Dispatch<React.SetStateAction<string>>\n) => {\n  // VERIFY ONE TIME\n  useEffect(() => {\n    checkWallet()\n\n    // UPDATE STATE\n    const updateWallet = (metaAccounts: string[]) => {\n      if (metaAccounts.length) {\n        setAccount(metaAccounts[0])\n      } else {\n        setAccount('')\n      }\n    }\n\n    // CONNECT\n    if (window.ethereum) {\n      // @ts-ignore\n      window.ethereum.on('accountsChanged', updateWallet)\n\n      // @ts-ignore\n      window.ethereum\n        .request({\n          method: 'eth_accounts'\n        })\n        .then(updateWallet)\n    }\n\n    // REMOVE LISTENER\n    return () => {\n      if (window.ethereum) {\n        // @ts-ignore\n        window.ethereum.removeListener('accountsChanged', updateWallet)\n      }\n    }\n  }, [setAccount])\n}\n","import React, { useState, useContext } from 'react'\n\nimport { WalletContext, WalletContextProps } from './context'\nimport { checkWallet, requestAccount } from './tools'\nimport { useListener } from './hooks'\n\n// COMPONENT\nconst WalletProvider: React.FC = ({ children }) => {\n  // WALLET STATE\n  const [account, setAccount] = useState<string>('')\n\n  // REQUEST ACCOUNTS\n  const getAccount = () => requestAccount(setAccount)\n\n  // HOOKS\n  useListener(setAccount)\n\n  return (\n    <WalletContext.Provider\n      value={{ account, checkWallet, requestAccount: getAccount }}\n    >\n      {children}\n    </WalletContext.Provider>\n  )\n}\n\n// OPEN WALLET BUTTON\nexport const OpenWallet: React.FC = () => {\n  const { requestAccount } = useWallet()\n\n  return (\n    <button\n      style={{\n        appearance: 'none',\n        outline: 'none',\n        backgroundImage:\n          'linear-gradient(92.88deg, #455EB5 9.16%, #5643CC 43.89%, #673FD7 64.72%)',\n        borderRadius: '10px',\n        borderStyle: 'none',\n        boxSizing: 'border-box',\n        color: '#FFFFFF',\n        cursor: 'pointer',\n        fontFamily: 'monospace',\n        fontSize: '16px',\n        fontWeight: 'bold',\n        padding: '15px ',\n        textAlign: 'center'\n      }}\n      onClick={requestAccount}\n    >\n      Connect Wallet\n    </button>\n  )\n}\n\n// SETTING ETH GLOBAL OBJECT\ndeclare global {\n  interface Window {\n    ethereum: unknown\n  }\n}\n\n// CONTEXT HOOK\nexport const useWallet = () => {\n  const walletCtx: WalletContextProps = useContext(WalletContext)\n  return walletCtx\n}\n\nexport default WalletProvider\n"],"names":["WalletContext","createContext","account","checkWallet","requestAccount","window","ethereum","console","error","undefined","setAccount","request","method","metaAccounts","useListener","useEffect","updateWallet","length","on","then","removeListener","WalletProvider","children","useState","getAccount","React","Provider","value","OpenWallet","useWallet","style","appearance","outline","backgroundImage","borderRadius","borderStyle","boxSizing","color","cursor","fontFamily","fontSize","fontWeight","padding","textAlign","onClick","walletCtx","useContext"],"mappings":"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"}